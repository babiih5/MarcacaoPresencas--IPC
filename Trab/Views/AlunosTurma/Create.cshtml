@model Trab.Models.AlunoTurma

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Adicionar Aluno";
}

<main role="main" class="container px-3" aria-labelledby="adicionarAlunoTitle">
    <h1 id="adicionarAlunoTitle" class="my-3 fs-3 fs-md-1">Adicionar Aluno à Turma</h1>

    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-body p-3 p-md-4">
                    <form asp-action="Create" role="form" aria-labelledby="formTitle">
                        <fieldset>
                            <legend id="formTitle" class="sr-only">Formulário para adicionar aluno à turma</legend>
                            <!-- ID da Turma (Oculto) -->
                            <input type="hidden" asp-for="IdTurma" value="@ViewBag.IdTurma" />

                            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

                            <!-- Selecionar Aluno pelo Nome -->
                            <div class="form-group mb-3">
                                <label for="AlunoSelecionado" class="form-label">Selecione um Aluno:</label>
                                <select id="AlunoSelecionado" name="AlunoSelecionado" class="form-select"
                                        asp-items="ViewBag.IdAluno" aria-required="true"
                                        aria-describedby="alunoValidation">
                                    <option value="">-- Selecione um aluno --</option>
                                </select>
                                <span class="text-danger" id="alunoValidation" role="alert"></span>
                            </div>

                            <!-- ID do Aluno (Pode ser editado agora) -->
                            <div class="form-group mb-4">
                                <label asp-for="IdAluno" class="form-label">Número Mecanográfico do Aluno:</label>
                                <input asp-for="IdAluno" id="IdAluno" class="form-control"
                                       aria-describedby="idAlunoHelp" />
                                <small id="idAlunoHelp" class="form-text text-muted">
                                    Digite o número mecanográfico ou selecione o aluno pelo nome acima.
                                </small>
                                <span asp-validation-for="IdAluno" class="text-danger" role="alert"></span>
                            </div>

                            <div class="form-group mt-4 d-flex flex-column flex-sm-row gap-2">
                                <button type="submit" class="btn btn-red w-100 w-sm-auto" aria-label="Adicionar o aluno à turma">
                                    Adicionar Aluno
                                </button>
                                <a asp-controller="AlunosTurma" asp-action="Index" asp-route-id="@ViewBag.IdTurma"
                                   class="btn btn-secondary w-100 w-sm-auto" aria-label="Voltar para a lista de alunos">
                                    Voltar
                                </a>
                            </div>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var selectAluno = document.getElementById("AlunoSelecionado");
            var inputIdAluno = document.getElementById("IdAluno");
            var alunoValidation = document.getElementById("alunoValidation");

            // Lista de alunos para busca rápida
            var alunos = @Html.Raw(ViewBag.AlunosJson);

            // Função para validar a seleção
            function validateSelection() {
                if (!selectAluno.value) {
                    alunoValidation.textContent = "Selecione um aluno válido";
                    return false;
                } else {
                    alunoValidation.textContent = "";
                    return true;
                }
            }

            // Evento ao mudar a seleção do nome
            selectAluno.addEventListener("change", function () {
                inputIdAluno.value = selectAluno.value;
                validateSelection();
                // Anunciar para leitores de tela
                alunoValidation.setAttribute("aria-live", "polite");
            });

            // Evento ao alterar o ID do aluno (preenche o nome)
            inputIdAluno.addEventListener("input", function() {
                var al = parseInt(inputIdAluno.value);
                if (!isNaN(al)) {
                    // Procura o aluno com este AL
                    var alunoEncontrado = alunos.find(a => a.Al === al);
                    if (alunoEncontrado) {
                        // Encontrou o aluno, seleciona no dropdown
                        selectAluno.value = al.toString();
                        alunoValidation.textContent = "";
                    } else {
                        // Não encontrou o aluno
                        selectAluno.value = "";
                        if (inputIdAluno.value.trim() !== "") {
                            alunoValidation.textContent = "Aluno não encontrado com este número";
                        }
                    }
                } else {
                    // Limpa a seleção se o valor não for um número válido
                    selectAluno.value = "";
                }
                // Anunciar para leitores de tela
                alunoValidation.setAttribute("aria-live", "polite");
            });

            // Inicialização
            if (selectAluno.options.length > 0 && selectAluno.value) {
                inputIdAluno.value = selectAluno.value;
            } else {
                inputIdAluno.value = "";
            }
        });
    </script>
}
